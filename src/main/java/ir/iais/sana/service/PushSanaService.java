package ir.iais.sana.service;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.3.5
 * 2021-03-27T14:44:15.432+04:30
 * Generated source version: 3.3.5
 *
 */
@WebServiceClient(name = "PushSanaService",
                  wsdlLocation = "http://services.ecogif.ir/ESB/rest/services/desc/PushSana/5_0?wsdl",
                  targetNamespace = "http://servicebus.sana.ir/PushSana/v4/")
public class PushSanaService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://servicebus.sana.ir/PushSana/v4/", "PushSanaService");
    public final static QName PushSanaPort = new QName("http://servicebus.sana.ir/PushSana/v4/", "PushSanaPort");
    static {
        URL url = null;
        try {
            url = new URL("http://services.ecogif.ir/ESB/rest/services/desc/PushSana/5_0?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(PushSanaService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://services.ecogif.ir/ESB/rest/services/desc/PushSana/5_0?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public PushSanaService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PushSanaService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PushSanaService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public PushSanaService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public PushSanaService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public PushSanaService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns PushSana
     */
    @WebEndpoint(name = "PushSanaPort")
    public PushSana getPushSanaPort() {
        return super.getPort(PushSanaPort, PushSana.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PushSana
     */
    @WebEndpoint(name = "PushSanaPort")
    public PushSana getPushSanaPort(WebServiceFeature... features) {
        return super.getPort(PushSanaPort, PushSana.class, features);
    }

}
